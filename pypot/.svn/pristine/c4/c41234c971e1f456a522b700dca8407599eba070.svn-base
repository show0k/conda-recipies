package:
  name: pypot
  version: "2.9.1"

source:
  fn: pypot-2.9.1.tar.gz
  url: https://pypi.python.org/packages/source/p/pypot/pypot-2.9.1.tar.gz
  md5: 88e1aa5c596094dffae1c7cc1b4e4353

  patches:
    #  List any patch files here
    - manifest.patch

build:
  noarch_python: True
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pypot = pypot:main
    #
    # Would create an entry point called pypot that calls pypot.main()

    - poppy-motor-reset = pypot.tools.dxl_reset:main
    # - herborist = pypot.tools.herborist.herborist:main [tools]

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools-git
    - numpy
    - pyserial
    - enum34
    - scipy

  run:
    - python
    - numpy
    - pyserial
    - enum34
    - scipy
    - pyzmq

test:
  # Python imports
  imports:
    - pypot
    - pypot.dynamixel
    - pypot.dynamixel.io
    - pypot.dynamixel.protocol
    - pypot.primitive
    - pypot.robot
    - pypot.sensor
    - pypot.sensor.camera
    - pypot.sensor.imagefeature
    - pypot.sensor.kinect
    - pypot.server
    - pypot.tools
    # - pypot.tools.herborist
    - pypot.utils
    # - pypot.vrep
    # - pypot.vrep.remoteApiBindings

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - poppy-motor-reset --help
    # - herborist --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/poppy-project/pypot
  license: GNU GENERAL PUBLIC LICENSE Version 3
  summary: 'Python Library for Robot Control'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
